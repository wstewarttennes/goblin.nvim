"""
Django settings for goblin project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# # Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nck@+)&-c^ycdkmh06-#n5h8#mcw=50sa%%98s9@t%4b+$#d9j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "0.0.0.0",
    "localhost"
]


# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_celery_beat',
    'channels',
    # 'django_celery_results',
    'brain',
    'mouth',
    'arms',
    'eyes',
    'ears'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'goblin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'goblin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'mydb',
        'USER': 'myuser',
        'PASSWORD': 'mypassword',
        'HOST': 'db',  # matches the service name of the database in docker-compose.yml
        'PORT': '5432',
    },
    'additional_database_1': {
        'ENGINE': os.environ.get("ADDITIONAL_DATABASE_1_ENGINE"),
        'NAME': os.environ.get("ADDITIONAL_DATABASE_1_NAME"),
        'USER': os.environ.get("ADDITIONAL_DATABASE_1_USER"),
        'PASSWORD': os.environ.get("ADDITIONAL_DATABASE_1_PASSWORD"),
        'HOST': os.environ.get("ADDITIONAL_DATABASE_1_HOST"), 
        'PORT': os.environ.get("ADDITIONAL_DATABASE_1_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 25
}


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CELERY_BROKER_URL = os.environ.get("CELERY_BROKER_URL", None)
# CACHEOPS_REDIS = os.environ.get("CELERY_BROKER_URL", None)

CELERY_BROKER_TRANSPORT_OPTIONS = {
    "health_check_interval": 10,
    # "socket_keepalive": True,
    # "socket_keepalive_options": {
    #     socket.TCP_KEEPIDLE: 60,
    #     socket.TCP_KEEPCNT: 5,
    #     socket.TCP_KEEPINTVL: 10,
    # },
}
CELERY_RESULT_BACKEND = os.environ.get("CELERY_RESULT_BACKEND", None)
CELERY_RESULT_EXTENDED = True
CELERY_RESULT_EXPIRES = 5 * 24 * 60 * 60  # 5 Days in seconds
CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = os.environ.get("CELERY_TASK_SERIALIZER", None)
CELERY_RESULT_SERIALIZER = os.environ.get("CELERY_RESULT_SERIALIZER", None)
CELERY_TIMEZONE = os.environ.get("CELERY_TIMEZONE", None)
CELERY_BEAT_SCHEDULER = os.environ.get("CELERY_BEAT_SCHEDULER", None)
CELERY_BROKER_POOL_LIMIT = 25

ASGI_APPLICATION = 'goblin.asgi.application'


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:8008",
    "http://localhost:8000",
]

REDIS_URL = os.getenv('REDIS_URL', 'redis://redis:6384')

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(
                os.getenv('REDIS_HOST', 'redis'),  # hostname
                int(os.getenv('REDIS_PORT', 6384))  # port
            )],
        },
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'channels': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

